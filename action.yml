name: 'Claude Code Changelog'
description: 'Generate changelog using Claude Code based on git diff from last tag'
author: 'mistricky'
branding:
  icon: 'file-text'
  color: 'orange'

inputs:
  github_token:
    description: 'GitHub token with repo access'
    required: true
    default: ${{ github.token }}
  anthropic_api_key:
    description: 'Anthropic API key for Claude'
    required: false
  small_fast_model:
    description: 'Use small fast model for Claude'
    required: false
    default: ''
  api_base_url:
    description: 'API base URL for Claude (optional, defaults to Anthropic API)'
    required: false
  from_tag:
    description: 'Start tag for diff (defaults to latest tag)'
    required: false
  to_ref:
    description: 'End reference for diff'
    required: false
    default: 'HEAD'
  model:
    description: 'Claude model to use'
    required: false
    default: 'claude-3-5-sonnet-20241022'
  use_bedrock:
    description: 'Use Amazon Bedrock'
    required: false
    default: 'false'
  use_vertex:
    description: 'Use Google Vertex AI'
    required: false
    default: 'false'
  bedrock_region:
    description: 'AWS Bedrock region'
    required: false
    default: 'us-east-1'
  vertex_project_id:
    description: 'Google Cloud Project ID'
    required: false
  vertex_region:
    description: 'Google Cloud region'
    required: false
    default: 'us-central1'

outputs:
  result:
    description: 'Number of changes analyzed'
    value: ${{ steps.output.outputs.result }}
  from_tag:
    description: 'Starting tag for the changelog'
    value: ${{ steps.prev_tag.outputs.previous_tag }}
  to_tag:
    description: 'Ending reference for the changelog'
    value: ${{ steps.prev_tag.outputs.current_tag }}

runs:
  using: 'composite'
  steps:
    - name: Get previous tag
      shell: bash
      id: prev_tag
      run: |
        CURRENT_TAG="${GITHUB_REF##*/}"
        echo "Current tag: $CURRENT_TAG"

        PREV_TAG=$(git describe --tags --abbrev=0 "$CURRENT_TAG"^)
        echo "Previous tag: $PREV_TAG"

        echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
        echo "previous_tag=$PREV_TAG" >> $GITHUB_OUTPUT

    - name: Prepare git diff for Claude analysis
      shell: bash
      run: |
        if [ -z "${{ inputs.from_tag }}" ]; then
          PREV_TAG="${{ steps.prev_tag.outputs.previous_tag }}"
        else
          PREV_TAG="${{ inputs.from_tag }}"
        fi
        
        TO_REF="${{ steps.prev_tag.outputs.current_tag }}"

        echo "Commits between $PREV_TAG and $TO_REF:"
        LOG=$(git log $PREV_TAG..$TO_REF --pretty=format:"%s")
        echo "from_tag=$PREV_TAG" >> $GITHUB_OUTPUT
        echo "to_ref=$TO_REF" >> $GITHUB_OUTPUT
        
        # Create analysis prompt for Claude with actual commit data
        cat > /tmp/changelog_prompt.md << EOF
        You are a technical writer creating a changelog for a software project.
        
        There are changes in the git repository between two points:
          - From tag: $PREV_TAG
          - To reference: ${{ steps.prev_tag.outputs.current_tag }}
          - Commits: ${LOG}

        ## Instructions:
        1. **Categorize changes** using standard changelog categories:
           - **Added**: New features
           - **Changed**: Changes in existing functionality
           - **Deprecated**: Soon-to-be removed features
           - **Removed**: Removed features
           - **Fixed**: Bug fixes
           - **Security**: Security improvements

        2. **Write clear, user-focused descriptions** that explain:
           - What changed from a user's perspective
           - Why it matters
           - Any breaking changes or migration notes

        3. **Use consistent formatting**:
           - Each item should be a concise bullet point
           - Start with an action verb when possible
           - Group related changes together

        4. **Focus on semantic meaning** rather than technical implementation details

        Output ONLY the changelog content in markdown format. Do NOT include any explanatory text, metadata, introductory phrases like "Based on the git analysis" or "Here's the changelog", or concluding remarks. Start IMMEDIATELY with the changelog categories and items (e.g., "## Added"). Do not include version numbers or dates. Do not preface your response with any text whatsoever.
        EOF

    - name: Generate changelog with Claude Code Base Action
      id: claude
      uses: anthropics/claude-code-base-action@beta
      with:
        claude_env: |
          ANTHROPIC_AUTH_TOKEN: ${{ inputs.anthropic_api_key }}
          ANTHROPIC_BASE_URL: ${{ inputs.api_base_url }}
          ANTHROPIC_MODEL: ${{ inputs.model }}
          ANTHROPIC_SMALL_FAST_MODEL: ${{ inputs.small_fast_model }}
        anthropic_api_key: ${{ inputs.anthropic_api_key }}
        use_bedrock: ${{ inputs.use_bedrock }}
        use_vertex: ${{ inputs.use_vertex }}
        bedrock_region: ${{ inputs.bedrock_region }}
        vertex_project_id: ${{ inputs.vertex_project_id }}
        vertex_region: ${{ inputs.vertex_region }}
        model: ${{ inputs.model }}
        allowed_tools: "Bash(git:*),Read,Write,Edit"
        prompt_file: /tmp/changelog_prompt.md

    - name: Set outputs
      id: output
      if: steps.claude.outputs.conclusion == 'success'
      uses: actions/github-script@v7
      with: 
        result-encoding: string
        script: |
          const fs = require('fs');
          const executionFile = '${{ steps.claude.outputs.execution_file }}';
          const executionLog = JSON.parse(fs.readFileSync(executionFile, 'utf8')); 

          return executionLog[executionLog.length - 1].result
